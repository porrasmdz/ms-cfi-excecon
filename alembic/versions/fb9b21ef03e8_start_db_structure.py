"""Start db structure

Revision ID: fb9b21ef03e8
Revises: d7695443e01b
Create Date: 2024-07-28 11:00:10.349128

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fb9b21ef03e8'
down_revision: Union[str, None] = "d7695443e01b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sku', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('unit_cost', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('measure_unit_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['product_category.id'], name='product_category_id_fkey'),
    sa.ForeignKeyConstraint(['measure_unit_id'], ['measure_unit.id'], name='product_measure_unit_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('activity_registry',
    sa.Column('detail', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('commentary', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('count_registry_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['count_registry_id'], ['count_registry.id'], name='activity_registry_count_registry_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='activity_registry_pkey')
    )
    op.create_table('contact',
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contact_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('alt_contact_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('employee_charge', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('company_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name='contact_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='contact_pkey')
    )
    op.create_table('warehouse_location_type',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='warehouse_location_type_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('measure_unit',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('conversion_formula', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['measure_unit.id'], name='measure_unit_parent_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='measure_unit_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('product_category',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('short_codename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['product_category.id'], name='product_category_parent_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_category_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('corporate_group',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='corporate_group_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cyclic_count',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('count_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('count_date_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('count_date_finish', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['cyclic_count.id'], name='cyclic_count_parent_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='cyclic_count_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('count_registry',
    sa.Column('registry_type', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('registry_units', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('registry_cost', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('difference_units', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('difference_cost', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cyclic_count_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cyclic_count_id'], ['cyclic_count.id'], name='count_registry_cyclic_count_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='count_registry_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='count_registry_pkey')
    )
    op.create_table('warehouse_type',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='warehouse_type_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('company',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('codename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cellphone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ruc', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('foundation_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('corporate_group_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['corporate_group_id'], ['corporate_group.id'], name='company_corporate_group_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='company_pkey')
    )
    op.create_table('whlocation_product_table',
    sa.Column('warehouse_location_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='whlocation_product_table_product_id_fkey'),
    sa.ForeignKeyConstraint(['warehouse_location_id'], ['warehouse_location.id'], name='whlocation_product_table_warehouse_location_id_fkey'),
    sa.PrimaryKeyConstraint('warehouse_location_id', 'product_id', name='whlocation_product_table_pkey')
    )
    op.create_table('warehouse',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('warehouse_type_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['warehouse_type_id'], ['warehouse_type.id'], name='warehouse_warehouse_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='warehouse_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('ccount_product_table',
    sa.Column('cyclic_count_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cyclic_count_id'], ['cyclic_count.id'], name='ccount_product_table_cyclic_count_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='ccount_product_table_product_id_fkey'),
    sa.PrimaryKeyConstraint('cyclic_count_id', 'product_id', name='ccount_product_table_pkey')
    )
    op.create_table('warehouse_product_table',
    sa.Column('warehouse_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='warehouse_product_table_product_id_fkey'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouse.id'], name='warehouse_product_table_warehouse_id_fkey'),
    sa.PrimaryKeyConstraint('warehouse_id', 'product_id', name='warehouse_product_table_pkey')
    )
    op.create_table('warehouse_location',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('wh_location_type_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['warehouse_location.id'], name='warehouse_location_parent_id_fkey'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouse.id'], name='warehouse_location_warehouse_id_fkey'),
    sa.ForeignKeyConstraint(['wh_location_type_id'], ['warehouse_location_type.id'], name='warehouse_location_wh_location_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='warehouse_location_pkey')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('warehouse_location')
    op.drop_table('warehouse_product_table')
    op.drop_table('ccount_product_table')
    op.drop_table('warehouse')
    op.drop_table('whlocation_product_table')
    op.drop_table('company')
    op.drop_table('warehouse_type')
    op.drop_table('count_registry')
    op.drop_table('cyclic_count')
    op.drop_table('corporate_group')
    op.drop_table('product_category')
    op.drop_table('measure_unit')
    op.drop_table('warehouse_location_type')
    op.drop_table('contact')
    op.drop_table('activity_registry')
    op.drop_table('product')
    # ### end Alembic commands ###
